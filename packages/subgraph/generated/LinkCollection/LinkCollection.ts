// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AcceptedRequestItem extends ethereum.Event {
  get params(): AcceptedRequestItem__Params {
    return new AcceptedRequestItem__Params(this);
  }
}

export class AcceptedRequestItem__Params {
  _event: AcceptedRequestItem;

  constructor(event: AcceptedRequestItem) {
    this._event = event;
  }

  get id(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get email(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get wallet(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class AddedRequestItem extends ethereum.Event {
  get params(): AddedRequestItem__Params {
    return new AddedRequestItem__Params(this);
  }
}

export class AddedRequestItem__Params {
  _event: AddedRequestItem;

  constructor(event: AddedRequestItem) {
    this._event = event;
  }

  get id(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get email(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get wallet(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RejectedRequestItem extends ethereum.Event {
  get params(): RejectedRequestItem__Params {
    return new RejectedRequestItem__Params(this);
  }
}

export class RejectedRequestItem__Params {
  _event: RejectedRequestItem;

  constructor(event: RejectedRequestItem) {
    this._event = event;
  }

  get id(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get email(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get wallet(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class UpdatedLinkItem extends ethereum.Event {
  get params(): UpdatedLinkItem__Params {
    return new UpdatedLinkItem__Params(this);
  }
}

export class UpdatedLinkItem__Params {
  _event: UpdatedLinkItem;

  constructor(event: UpdatedLinkItem) {
    this._event = event;
  }

  get email(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get wallet1(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get wallet2(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class LinkCollection__getValidatorResultValue0Struct extends ethereum.Tuple {
  get validator(): Address {
    return this[0].toAddress();
  }

  get index(): BigInt {
    return this[1].toBigInt();
  }

  get endpoint(): string {
    return this[2].toString();
  }

  get status(): i32 {
    return this[3].toI32();
  }
}

export class LinkCollection__getValidatorsResultValue0Struct extends ethereum.Tuple {
  get validator(): Address {
    return this[0].toAddress();
  }

  get index(): BigInt {
    return this[1].toBigInt();
  }

  get endpoint(): string {
    return this[2].toString();
  }

  get status(): i32 {
    return this[3].toI32();
  }
}

export class LinkCollection extends ethereum.SmartContract {
  static bind(address: Address): LinkCollection {
    return new LinkCollection("LinkCollection", address);
  }

  NULL(): Bytes {
    let result = super.call("NULL", "NULL():(bytes32)", []);

    return result[0].toBytes();
  }

  try_NULL(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("NULL", "NULL():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getAddressOfValidators(): Array<Address> {
    let result = super.call(
      "getAddressOfValidators",
      "getAddressOfValidators():(address[])",
      []
    );

    return result[0].toAddressArray();
  }

  try_getAddressOfValidators(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getAddressOfValidators",
      "getAddressOfValidators():(address[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getValidator(_idx: BigInt): LinkCollection__getValidatorResultValue0Struct {
    let result = super.call(
      "getValidator",
      "getValidator(uint256):((address,uint256,string,uint8))",
      [ethereum.Value.fromUnsignedBigInt(_idx)]
    );

    return changetype<LinkCollection__getValidatorResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getValidator(
    _idx: BigInt
  ): ethereum.CallResult<LinkCollection__getValidatorResultValue0Struct> {
    let result = super.tryCall(
      "getValidator",
      "getValidator(uint256):((address,uint256,string,uint8))",
      [ethereum.Value.fromUnsignedBigInt(_idx)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<LinkCollection__getValidatorResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  getValidatorLength(): BigInt {
    let result = super.call(
      "getValidatorLength",
      "getValidatorLength():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getValidatorLength(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getValidatorLength",
      "getValidatorLength():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getValidators(): Array<LinkCollection__getValidatorsResultValue0Struct> {
    let result = super.call(
      "getValidators",
      "getValidators():((address,uint256,string,uint8)[])",
      []
    );

    return result[0].toTupleArray<
      LinkCollection__getValidatorsResultValue0Struct
    >();
  }

  try_getValidators(): ethereum.CallResult<
    Array<LinkCollection__getValidatorsResultValue0Struct>
  > {
    let result = super.tryCall(
      "getValidators",
      "getValidators():((address,uint256,string,uint8)[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<LinkCollection__getValidatorsResultValue0Struct>()
    );
  }

  nonceOf(_wallet: Address): BigInt {
    let result = super.call("nonceOf", "nonceOf(address):(uint256)", [
      ethereum.Value.fromAddress(_wallet)
    ]);

    return result[0].toBigInt();
  }

  try_nonceOf(_wallet: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("nonceOf", "nonceOf(address):(uint256)", [
      ethereum.Value.fromAddress(_wallet)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  toAddress(_email: Bytes): Address {
    let result = super.call("toAddress", "toAddress(bytes32):(address)", [
      ethereum.Value.fromFixedBytes(_email)
    ]);

    return result[0].toAddress();
  }

  try_toAddress(_email: Bytes): ethereum.CallResult<Address> {
    let result = super.tryCall("toAddress", "toAddress(bytes32):(address)", [
      ethereum.Value.fromFixedBytes(_email)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  toEmail(_wallet: Address): Bytes {
    let result = super.call("toEmail", "toEmail(address):(bytes32)", [
      ethereum.Value.fromAddress(_wallet)
    ]);

    return result[0].toBytes();
  }

  try_toEmail(_wallet: Address): ethereum.CallResult<Bytes> {
    let result = super.tryCall("toEmail", "toEmail(address):(bytes32)", [
      ethereum.Value.fromAddress(_wallet)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _validators(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddRequestCall extends ethereum.Call {
  get inputs(): AddRequestCall__Inputs {
    return new AddRequestCall__Inputs(this);
  }

  get outputs(): AddRequestCall__Outputs {
    return new AddRequestCall__Outputs(this);
  }
}

export class AddRequestCall__Inputs {
  _call: AddRequestCall;

  constructor(call: AddRequestCall) {
    this._call = call;
  }

  get _id(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _email(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _wallet(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _signature(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class AddRequestCall__Outputs {
  _call: AddRequestCall;

  constructor(call: AddRequestCall) {
    this._call = call;
  }
}

export class UpdateCall extends ethereum.Call {
  get inputs(): UpdateCall__Inputs {
    return new UpdateCall__Inputs(this);
  }

  get outputs(): UpdateCall__Outputs {
    return new UpdateCall__Outputs(this);
  }
}

export class UpdateCall__Inputs {
  _call: UpdateCall;

  constructor(call: UpdateCall) {
    this._call = call;
  }

  get _email(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _wallet1(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _signature1(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get _wallet2(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _signature2(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class UpdateCall__Outputs {
  _call: UpdateCall;

  constructor(call: UpdateCall) {
    this._call = call;
  }
}

export class UpdateEndpointCall extends ethereum.Call {
  get inputs(): UpdateEndpointCall__Inputs {
    return new UpdateEndpointCall__Inputs(this);
  }

  get outputs(): UpdateEndpointCall__Outputs {
    return new UpdateEndpointCall__Outputs(this);
  }
}

export class UpdateEndpointCall__Inputs {
  _call: UpdateEndpointCall;

  constructor(call: UpdateEndpointCall) {
    this._call = call;
  }

  get _endpoint(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class UpdateEndpointCall__Outputs {
  _call: UpdateEndpointCall;

  constructor(call: UpdateEndpointCall) {
    this._call = call;
  }
}

export class VoteRequestCall extends ethereum.Call {
  get inputs(): VoteRequestCall__Inputs {
    return new VoteRequestCall__Inputs(this);
  }

  get outputs(): VoteRequestCall__Outputs {
    return new VoteRequestCall__Outputs(this);
  }
}

export class VoteRequestCall__Inputs {
  _call: VoteRequestCall;

  constructor(call: VoteRequestCall) {
    this._call = call;
  }

  get _id(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _ballot(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class VoteRequestCall__Outputs {
  _call: VoteRequestCall;

  constructor(call: VoteRequestCall) {
    this._call = call;
  }
}
