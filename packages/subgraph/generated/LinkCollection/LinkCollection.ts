// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AcceptedRequestItem extends ethereum.Event {
  get params(): AcceptedRequestItem__Params {
    return new AcceptedRequestItem__Params(this);
  }
}

export class AcceptedRequestItem__Params {
  _event: AcceptedRequestItem;

  constructor(event: AcceptedRequestItem) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get hash(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class AddedRequestItem extends ethereum.Event {
  get params(): AddedRequestItem__Params {
    return new AddedRequestItem__Params(this);
  }
}

export class AddedRequestItem__Params {
  _event: AddedRequestItem;

  constructor(event: AddedRequestItem) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get email(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get wallet(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RejectedRequestItem extends ethereum.Event {
  get params(): RejectedRequestItem__Params {
    return new RejectedRequestItem__Params(this);
  }
}

export class RejectedRequestItem__Params {
  _event: RejectedRequestItem;

  constructor(event: RejectedRequestItem) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get hash(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class UpdatedLinkItem extends ethereum.Event {
  get params(): UpdatedLinkItem__Params {
    return new UpdatedLinkItem__Params(this);
  }
}

export class UpdatedLinkItem__Params {
  _event: UpdatedLinkItem;

  constructor(event: UpdatedLinkItem) {
    this._event = event;
  }

  get hash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get sender1(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender2(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class LinkCollection extends ethereum.SmartContract {
  static bind(address: Address): LinkCollection {
    return new LinkCollection("LinkCollection", address);
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  LINK_COLLECTION_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "LINK_COLLECTION_ADMIN_ROLE",
      "LINK_COLLECTION_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_LINK_COLLECTION_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "LINK_COLLECTION_ADMIN_ROLE",
      "LINK_COLLECTION_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  NULL(): Bytes {
    let result = super.call("NULL", "NULL():(bytes32)", []);

    return result[0].toBytes();
  }

  try_NULL(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("NULL", "NULL():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  VALIDATOR_ROLE(): Bytes {
    let result = super.call("VALIDATOR_ROLE", "VALIDATOR_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_VALIDATOR_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "VALIDATOR_ROLE",
      "VALIDATOR_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  nonce(param0: Address): BigInt {
    let result = super.call("nonce", "nonce(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBigInt();
  }

  try_nonce(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("nonce", "nonce(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  toAddress(param0: Bytes): Address {
    let result = super.call("toAddress", "toAddress(bytes32):(address)", [
      ethereum.Value.fromFixedBytes(param0)
    ]);

    return result[0].toAddress();
  }

  try_toAddress(param0: Bytes): ethereum.CallResult<Address> {
    let result = super.tryCall("toAddress", "toAddress(bytes32):(address)", [
      ethereum.Value.fromFixedBytes(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  toHash(param0: Address): Bytes {
    let result = super.call("toHash", "toHash(address):(bytes32)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBytes();
  }

  try_toHash(param0: Address): ethereum.CallResult<Bytes> {
    let result = super.tryCall("toHash", "toHash(address):(bytes32)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get validators(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddRequestCall extends ethereum.Call {
  get inputs(): AddRequestCall__Inputs {
    return new AddRequestCall__Inputs(this);
  }

  get outputs(): AddRequestCall__Outputs {
    return new AddRequestCall__Outputs(this);
  }
}

export class AddRequestCall__Inputs {
  _call: AddRequestCall;

  constructor(call: AddRequestCall) {
    this._call = call;
  }

  get _email(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _wallet(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _signature(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class AddRequestCall__Outputs {
  _call: AddRequestCall;

  constructor(call: AddRequestCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class UpdateCall extends ethereum.Call {
  get inputs(): UpdateCall__Inputs {
    return new UpdateCall__Inputs(this);
  }

  get outputs(): UpdateCall__Outputs {
    return new UpdateCall__Outputs(this);
  }
}

export class UpdateCall__Inputs {
  _call: UpdateCall;

  constructor(call: UpdateCall) {
    this._call = call;
  }

  get hash(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get sender1(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get signature1(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get sender2(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get signature2(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class UpdateCall__Outputs {
  _call: UpdateCall;

  constructor(call: UpdateCall) {
    this._call = call;
  }
}

export class VoteRequestCall extends ethereum.Call {
  get inputs(): VoteRequestCall__Inputs {
    return new VoteRequestCall__Inputs(this);
  }

  get outputs(): VoteRequestCall__Outputs {
    return new VoteRequestCall__Outputs(this);
  }
}

export class VoteRequestCall__Inputs {
  _call: VoteRequestCall;

  constructor(call: VoteRequestCall) {
    this._call = call;
  }

  get _id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _ballot(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class VoteRequestCall__Outputs {
  _call: VoteRequestCall;

  constructor(call: VoteRequestCall) {
    this._call = call;
  }
}
