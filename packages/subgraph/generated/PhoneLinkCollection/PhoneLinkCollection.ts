// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AcceptedRequestItem extends ethereum.Event {
  get params(): AcceptedRequestItem__Params {
    return new AcceptedRequestItem__Params(this);
  }
}

export class AcceptedRequestItem__Params {
  _event: AcceptedRequestItem;

  constructor(event: AcceptedRequestItem) {
    this._event = event;
  }

  get id(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get phone(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get wallet(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class AddedRequestItem extends ethereum.Event {
  get params(): AddedRequestItem__Params {
    return new AddedRequestItem__Params(this);
  }
}

export class AddedRequestItem__Params {
  _event: AddedRequestItem;

  constructor(event: AddedRequestItem) {
    this._event = event;
  }

  get id(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get phone(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get wallet(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class AdminChanged extends ethereum.Event {
  get params(): AdminChanged__Params {
    return new AdminChanged__Params(this);
  }
}

export class AdminChanged__Params {
  _event: AdminChanged;

  constructor(event: AdminChanged) {
    this._event = event;
  }

  get previousAdmin(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newAdmin(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class BeaconUpgraded extends ethereum.Event {
  get params(): BeaconUpgraded__Params {
    return new BeaconUpgraded__Params(this);
  }
}

export class BeaconUpgraded__Params {
  _event: BeaconUpgraded;

  constructor(event: BeaconUpgraded) {
    this._event = event;
  }

  get beacon(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class RejectedRequestItem extends ethereum.Event {
  get params(): RejectedRequestItem__Params {
    return new RejectedRequestItem__Params(this);
  }
}

export class RejectedRequestItem__Params {
  _event: RejectedRequestItem;

  constructor(event: RejectedRequestItem) {
    this._event = event;
  }

  get id(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get phone(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get wallet(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Upgraded extends ethereum.Event {
  get params(): Upgraded__Params {
    return new Upgraded__Params(this);
  }
}

export class Upgraded__Params {
  _event: Upgraded;

  constructor(event: Upgraded) {
    this._event = event;
  }

  get implementation(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class PhoneLinkCollection__getRequestItemResult {
  value0: BigInt;
  value1: i32;

  constructor(value0: BigInt, value1: i32) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set(
      "value1",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value1))
    );
    return map;
  }

  getAgreement(): BigInt {
    return this.value0;
  }

  getStatus(): i32 {
    return this.value1;
  }
}

export class PhoneLinkCollection__getValidatorResultValue0Struct extends ethereum.Tuple {
  get validator(): Address {
    return this[0].toAddress();
  }

  get index(): BigInt {
    return this[1].toBigInt();
  }

  get endpoint(): string {
    return this[2].toString();
  }

  get status(): i32 {
    return this[3].toI32();
  }
}

export class PhoneLinkCollection__getValidatorsResultValue0Struct extends ethereum.Tuple {
  get validator(): Address {
    return this[0].toAddress();
  }

  get index(): BigInt {
    return this[1].toBigInt();
  }

  get endpoint(): string {
    return this[2].toString();
  }

  get status(): i32 {
    return this[3].toI32();
  }
}

export class PhoneLinkCollection extends ethereum.SmartContract {
  static bind(address: Address): PhoneLinkCollection {
    return new PhoneLinkCollection("PhoneLinkCollection", address);
  }

  NULL(): Bytes {
    let result = super.call("NULL", "NULL():(bytes32)", []);

    return result[0].toBytes();
  }

  try_NULL(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("NULL", "NULL():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  canCountVote(_id: Bytes): i32 {
    let result = super.call("canCountVote", "canCountVote(bytes32):(uint8)", [
      ethereum.Value.fromFixedBytes(_id)
    ]);

    return result[0].toI32();
  }

  try_canCountVote(_id: Bytes): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "canCountVote",
      "canCountVote(bytes32):(uint8)",
      [ethereum.Value.fromFixedBytes(_id)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  getAddressOfValidators(): Array<Address> {
    let result = super.call(
      "getAddressOfValidators",
      "getAddressOfValidators():(address[])",
      []
    );

    return result[0].toAddressArray();
  }

  try_getAddressOfValidators(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getAddressOfValidators",
      "getAddressOfValidators():(address[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getRequestItem(_id: Bytes): PhoneLinkCollection__getRequestItemResult {
    let result = super.call(
      "getRequestItem",
      "getRequestItem(bytes32):(uint32,uint8)",
      [ethereum.Value.fromFixedBytes(_id)]
    );

    return new PhoneLinkCollection__getRequestItemResult(
      result[0].toBigInt(),
      result[1].toI32()
    );
  }

  try_getRequestItem(
    _id: Bytes
  ): ethereum.CallResult<PhoneLinkCollection__getRequestItemResult> {
    let result = super.tryCall(
      "getRequestItem",
      "getRequestItem(bytes32):(uint32,uint8)",
      [ethereum.Value.fromFixedBytes(_id)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PhoneLinkCollection__getRequestItemResult(
        value[0].toBigInt(),
        value[1].toI32()
      )
    );
  }

  getValidator(
    _idx: BigInt
  ): PhoneLinkCollection__getValidatorResultValue0Struct {
    let result = super.call(
      "getValidator",
      "getValidator(uint256):((address,uint256,string,uint8))",
      [ethereum.Value.fromUnsignedBigInt(_idx)]
    );

    return changetype<PhoneLinkCollection__getValidatorResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getValidator(
    _idx: BigInt
  ): ethereum.CallResult<PhoneLinkCollection__getValidatorResultValue0Struct> {
    let result = super.tryCall(
      "getValidator",
      "getValidator(uint256):((address,uint256,string,uint8))",
      [ethereum.Value.fromUnsignedBigInt(_idx)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<PhoneLinkCollection__getValidatorResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  getValidatorLength(): BigInt {
    let result = super.call(
      "getValidatorLength",
      "getValidatorLength():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getValidatorLength(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getValidatorLength",
      "getValidatorLength():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getValidators(): Array<PhoneLinkCollection__getValidatorsResultValue0Struct> {
    let result = super.call(
      "getValidators",
      "getValidators():((address,uint256,string,uint8)[])",
      []
    );

    return result[0].toTupleArray<
      PhoneLinkCollection__getValidatorsResultValue0Struct
    >();
  }

  try_getValidators(): ethereum.CallResult<
    Array<PhoneLinkCollection__getValidatorsResultValue0Struct>
  > {
    let result = super.tryCall(
      "getValidators",
      "getValidators():((address,uint256,string,uint8)[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<
        PhoneLinkCollection__getValidatorsResultValue0Struct
      >()
    );
  }

  isAvailable(_id: Bytes): boolean {
    let result = super.call("isAvailable", "isAvailable(bytes32):(bool)", [
      ethereum.Value.fromFixedBytes(_id)
    ]);

    return result[0].toBoolean();
  }

  try_isAvailable(_id: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall("isAvailable", "isAvailable(bytes32):(bool)", [
      ethereum.Value.fromFixedBytes(_id)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  nonceOf(_wallet: Address): BigInt {
    let result = super.call("nonceOf", "nonceOf(address):(uint256)", [
      ethereum.Value.fromAddress(_wallet)
    ]);

    return result[0].toBigInt();
  }

  try_nonceOf(_wallet: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("nonceOf", "nonceOf(address):(uint256)", [
      ethereum.Value.fromAddress(_wallet)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  proxiableUUID(): Bytes {
    let result = super.call("proxiableUUID", "proxiableUUID():(bytes32)", []);

    return result[0].toBytes();
  }

  try_proxiableUUID(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "proxiableUUID",
      "proxiableUUID():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  toAddress(_phone: Bytes): Address {
    let result = super.call("toAddress", "toAddress(bytes32):(address)", [
      ethereum.Value.fromFixedBytes(_phone)
    ]);

    return result[0].toAddress();
  }

  try_toAddress(_phone: Bytes): ethereum.CallResult<Address> {
    let result = super.tryCall("toAddress", "toAddress(bytes32):(address)", [
      ethereum.Value.fromFixedBytes(_phone)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  toPhone(_wallet: Address): Bytes {
    let result = super.call("toPhone", "toPhone(address):(bytes32)", [
      ethereum.Value.fromAddress(_wallet)
    ]);

    return result[0].toBytes();
  }

  try_toPhone(_wallet: Address): ethereum.CallResult<Bytes> {
    let result = super.tryCall("toPhone", "toPhone(address):(bytes32)", [
      ethereum.Value.fromAddress(_wallet)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }
}

export class AddRequestCall extends ethereum.Call {
  get inputs(): AddRequestCall__Inputs {
    return new AddRequestCall__Inputs(this);
  }

  get outputs(): AddRequestCall__Outputs {
    return new AddRequestCall__Outputs(this);
  }
}

export class AddRequestCall__Inputs {
  _call: AddRequestCall;

  constructor(call: AddRequestCall) {
    this._call = call;
  }

  get _id(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _phone(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _wallet(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _signature(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class AddRequestCall__Outputs {
  _call: AddRequestCall;

  constructor(call: AddRequestCall) {
    this._call = call;
  }
}

export class CountVoteCall extends ethereum.Call {
  get inputs(): CountVoteCall__Inputs {
    return new CountVoteCall__Inputs(this);
  }

  get outputs(): CountVoteCall__Outputs {
    return new CountVoteCall__Outputs(this);
  }
}

export class CountVoteCall__Inputs {
  _call: CountVoteCall;

  constructor(call: CountVoteCall) {
    this._call = call;
  }

  get _id(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class CountVoteCall__Outputs {
  _call: CountVoteCall;

  constructor(call: CountVoteCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _validators(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UpdateEndpointCall extends ethereum.Call {
  get inputs(): UpdateEndpointCall__Inputs {
    return new UpdateEndpointCall__Inputs(this);
  }

  get outputs(): UpdateEndpointCall__Outputs {
    return new UpdateEndpointCall__Outputs(this);
  }
}

export class UpdateEndpointCall__Inputs {
  _call: UpdateEndpointCall;

  constructor(call: UpdateEndpointCall) {
    this._call = call;
  }

  get _endpoint(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class UpdateEndpointCall__Outputs {
  _call: UpdateEndpointCall;

  constructor(call: UpdateEndpointCall) {
    this._call = call;
  }
}

export class UpgradeToCall extends ethereum.Call {
  get inputs(): UpgradeToCall__Inputs {
    return new UpgradeToCall__Inputs(this);
  }

  get outputs(): UpgradeToCall__Outputs {
    return new UpgradeToCall__Outputs(this);
  }
}

export class UpgradeToCall__Inputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpgradeToCall__Outputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }
}

export class UpgradeToAndCallCall extends ethereum.Call {
  get inputs(): UpgradeToAndCallCall__Inputs {
    return new UpgradeToAndCallCall__Inputs(this);
  }

  get outputs(): UpgradeToAndCallCall__Outputs {
    return new UpgradeToAndCallCall__Outputs(this);
  }
}

export class UpgradeToAndCallCall__Inputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get data(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class UpgradeToAndCallCall__Outputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }
}

export class VoteRequestCall extends ethereum.Call {
  get inputs(): VoteRequestCall__Inputs {
    return new VoteRequestCall__Inputs(this);
  }

  get outputs(): VoteRequestCall__Outputs {
    return new VoteRequestCall__Outputs(this);
  }
}

export class VoteRequestCall__Inputs {
  _call: VoteRequestCall;

  constructor(call: VoteRequestCall) {
    this._call = call;
  }

  get _id(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class VoteRequestCall__Outputs {
  _call: VoteRequestCall;

  constructor(call: VoteRequestCall) {
    this._call = call;
  }
}
